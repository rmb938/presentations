services:
  warpstream-agent-kafka:
    image: public.ecr.aws/warpstream-labs/warpstream_agent:latest
    restart: unless-stopped
    command:
      - agent
    env_file: .env/warpstream-agent-kafka
    secrets:
      - gcp_service_account_key
    ports:
      - 9092:9092
  bento-historical:
    image: ghcr.io/warpstreamlabs/bento
    restart: unless-stopped
    command:
      - --log.level
      - debug
    volumes:
      - ./bento-historical.yaml:/bento.yaml
      # TODO: remove this at some point and replace with redis cache
      - bento-historical-file-cache-timestamp_offset:/cache/timestamp_offset
    depends_on:
      redis:
        condition: service_healthy
  bento-realtime:
    image: ghcr.io/warpstreamlabs/bento
    restart: unless-stopped
    command:
      - --log.level
      # Trace because this one does way less stuff so we want to make sure it's
      # still working
      - trace
    volumes:
      - ./bento-realtime.yaml:/bento.yaml
    depends_on:
      redis:
        condition: service_healthy
  warpstream-agent-tableflow:
    image: public.ecr.aws/warpstream-labs/warpstream_agent:unstable-timestampfrommessagevalue
    restart: unless-stopped
    command:
      - agent
    env_file: .env/warpstream-agent-tableflow
    secrets:
      - gcp_service_account_key
  redis:
    image: docker.io/library/redis:8
    command:
      # Save a snapshot of the DB every 60 seconds if at least 1 write operation was performed
      - redis-server
      - --save
      - "60"
      - "1"
      - --loglevel warning
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    volumes:
      - redis:/data

secrets:
  gcp_service_account_key:
    file: .secrets/rmb-lab-75a2716621b6.json

volumes:
  bento-historical-file-cache-timestamp_offset: {}
  redis: {}
